<html>
<head><link rel=stylesheet href="../jdoc.css" type="text/css"><title>for.</title>
<link href="../jdoc.css" rel=stylesheet></head>
<body><!--top jump start--><a href="cgoto.htm">&gt;&gt;</a>&nbsp;
<a href="ccont.htm">&lt;&lt;</a>&nbsp;
<a href="../user/contents.htm">Usr</a>&nbsp;
<a href="../primer/contents.htm">Pri</a>&nbsp;
<a href="../jforc/contents.htm">JfC</a>&nbsp;
<a href="../learning/contents.htm">LJ</a>&nbsp;
<a href="../phrases/contents.htm">Phr</a>&nbsp;
<a href="../dictionary/contents.htm">Dic</a>&nbsp;
<a href="../dictionary/vocabul.htm">Voc</a>&nbsp;
<a href="../dictionary/xmain.htm">!:</a>&nbsp;
<a href="../index.htm">Help</a>&nbsp;
Dictionary<hr><!--top jump end-->

<br>
<b><font face="Courier New" size=+3>for.</font></b><br><br>

<table><tr><td valign=top width=100% bgcolor=#eeeeee>
<pre>
for.     T do. B end.
for_xyz. T do. B end.
</pre>

The<tt> B </tt>block is evaluated once for each item of the 
array<tt> A </tt>that results from evaluating the<tt> T </tt>block.  
In the<tt> for_xyz. </tt>form, the local name<tt> xyz </tt>is 
set to the value of an item on each evaluation of the<tt> B </tt>block
and<tt> xyz_index </tt>is set to the index of the item;
results are not dependable if these names are
re-assigned within the<tt> B </tt>block.
<br><br>

<a href="cbreak.htm"><tt>break.</tt></a><tt> </tt>
goes to the end of the<tt> for. </tt>control structure, 
and<tt> </tt><a href="ccont.htm"><tt>continue.</tt></a><tt> </tt>
goes to the evaluation of<tt> B </tt>for the next item.
<br>&nbsp;</td>
</tr></table><br>

For example:<br>

<pre>
f0=: 3 : 0
 s=. 0
 for. i. y do. s=.&gt;:s end.
)

   (f0 = ])&quot;0 ?5$100
1 1 1 1 1

f1=: 3 : 0
 s=.0
 for_j. i.y do.
  if. 2|j do. continue. end.
  s=.j+s
 end.
)

   (f1 = 2&amp;!@&gt;.&amp;.-:)&quot;0 ?5$100
1 1 1 1 1

comb=: 4 : 0        NB. All size x combinations of i.y
 k=. i.&gt;:d=.y-x
 z=. (d$&lt;i.0 0),&lt;i.1 0
 for. i.x do. z=. k ,.&amp;.&gt; ,&amp;.&gt;/\. &gt;:&amp;.&gt; z end.
 ; z
)

   3 comb 5
0 1 2
0 1 3
0 1 4
0 2 3
0 2 4
0 3 4
1 2 3
1 2 4
1 3 4
2 3 4

queens=: 3 : 0      NB. solves the n queens problem
 z=.i.n,*n=.y
 for. }.z do.
  b=. -. (i.n) e.&quot;1 ,. z +&quot;1 _ ((-i.){:$z) */ _1 0 1
  z=. ((+/&quot;1 b)#z),.n|I.,b
 end.
)

   queens 5
0 2 4 1 3
0 3 1 4 2
1 3 0 2 4
1 4 2 0 3
2 0 3 1 4
2 4 1 3 0
3 0 2 4 1
3 1 4 2 0
4 1 3 0 2
4 2 0 3 1
</pre>

<!--bottom jump start--><hr><a href="cgoto.htm">&gt;&gt;</a>&nbsp;
<a href="ccont.htm">&lt;&lt;</a>&nbsp;
<a href="../user/contents.htm">Usr</a>&nbsp;
<a href="../primer/contents.htm">Pri</a>&nbsp;
<a href="../jforc/contents.htm">JfC</a>&nbsp;
<a href="../learning/contents.htm">LJ</a>&nbsp;
<a href="../phrases/contents.htm">Phr</a>&nbsp;
<a href="../dictionary/contents.htm">Dic</a>&nbsp;
<a href="../dictionary/vocabul.htm">Voc</a>&nbsp;
<a href="../dictionary/xmain.htm">!:</a>&nbsp;
<a href="../index.htm">Help</a>&nbsp;
Dictionary<!--bottom jump end--></body>
</html>
