<html>
<head><link rel=stylesheet href="../jdoc.css" type="text/css"><title>128!: Miscellaneous</title>
<link href="../jdoc.css" rel=stylesheet></head>
<body><!--top jump start--><a href="special.htm">&gt;&gt;</a>&nbsp;
<a href="dx018.htm">&lt;&lt;</a>&nbsp;
<a href="../user/contents.htm">Usr</a>&nbsp;
<a href="../primer/contents.htm">Pri</a>&nbsp;
<a href="../jforc/contents.htm">JfC</a>&nbsp;
<a href="../learning/contents.htm">LJ</a>&nbsp;
<a href="../phrases/contents.htm">Phr</a>&nbsp;
<a href="../dictionary/contents.htm">Dic</a>&nbsp;
<a href="../dictionary/vocabul.htm">Voc</a>&nbsp;
<a href="../dictionary/xmain.htm">!:</a>&nbsp;
<a href="../index.htm">Help</a>&nbsp;
Dictionary<hr><!--top jump end-->

<br>
<table width=100%><tr>
<td align=left   width=50%><b><font size=+2>Miscellaneous</font></b></td>
<td align=right  width=50%><b><font face="Courier New" size=+3>128!:</font></b></td>
</tr></table>
<br>

<TABLE>
<TR><TD valign=top width=120><a name="0"></a><tt>128!:0 y</tt></td>
<TD>
<B>QR</B>.  Produces the QR decomposition of a complex matrix<tt> y </tt>
(in the domain of matrix inverse<tt> %.</tt>),<tt> </tt>
an Hermitian matrix and a square upper triangular matrix,
individually boxed.

<pre>
   mp=: +/ . *                  NB. Matrix product
   A=: j./?. 2 7 4$10           NB. A random complex matrix
   $A
7 4
   'Q R'=: 128!:0 A
   $Q
7 4
   $R
4 4
   &gt;./|,(=i.4) - (+|:Q) mp Q    NB. Q is Hermitian
2.70972e_16
   0~:R                         NB. R is upper triangular
1 1 1 1
0 1 1 1
0 0 1 1
0 0 0 1
   A -: Q mp R
1
</pre><br>
</TD></TR>

<TR><TD valign=top><a name="1"></a><tt>128!:1 y</tt></td>
<TD><B>R Inv</B>.  Invert square upper triangular matrix.<br><br>
</td></tr>

<TR><TD valign=top><a name="2"></a><tt>x 128!:2 y</tt></td>
<TD><B>Apply</B>.<tt> x 128!:2 y </tt>applies the verb in
string<tt> x </tt>to<tt> y</tt> .<tt> </tt>
For example:
<pre>
   '+/' 128!:2 i.2 5
5 7 9 11 13
   '+/' 128!:2&quot;1 i.2 5
10 35
   '+/&quot;1' 128!:2 i.2 5
10 35
   ('+/';'|.';'|.&quot;1') 128!:2&amp;.&gt;&lt;i.2 5
+-----------+---------+---------+
|5 7 9 11 13|5 6 7 8 9|4 3 2 1 0|
|           |0 1 2 3 4|9 8 7 6 5|
+-----------+---------+---------+

   '2 3' 128!:2 i.2 5
|syntax error
|   '2 3'    128!:2 i.2 5

   '@' 128!:2 i.2 5
|syntax error
|   '@'    128!:2 i.2 5
</pre>
The ranks of<tt> 128!:2 </tt>are<tt> 1 _ </tt>,<tt> </tt>
that is, apply the lists in the left argument to
the right argument <i>in toto</i>.<br><br></td></tr>

<TR><TD valign=top><a name="3"></a><tt>[x] 128!:3 y</tt></td>
<TD><p><B>CRC</B>. A CRC polynomial is a boolean list or an integer.
The following CRC polynomials<tt> p </tt>and<tt> q </tt>are equivalent:</p>

<pre>
   p=: 1 1 1 0  1 1 0 1  1 0 1 1  1 0 0 0  1 0 0 0  0 0 1 1  0 0 1 0  0 0 0 0
   q=: _306674912

   _8]\p
1 1 1 0 1 1 0 1
1 0 1 1 1 0 0 0
1 0 0 0 0 0 1 1
0 0 1 0 0 0 0 0

   q -: (_2 _2,30$2) #. p
1
   p -: (32$2) #: q
1
</pre>

<p><tt> x 128!:3 y </tt>computes the CRC encoding of string<tt> y </tt>
according to<tt> x</tt> ,<tt> </tt>which
may be<tt> p </tt>or<tt> p;i</tt> ,<tt> </tt>where<tt> p </tt>
is a CRC polynomial and<tt> i </tt>is the initial CRC value.
If<tt> i </tt>is elided then<tt> _1 </tt>is used.<tt> 128!:3 y </tt>
is equivalent to<tt> _306674912 (128!:3) y</tt> .</p>

<p>The monad<tt> x&amp;(128!:3) </tt>is supported by special code which
pre-computes a look-up table of CRC values for each byte.</p>

<p>Examples:</p>
<pre>
   f=: 128!:3
   f '123456789'
_873187034
   f 'assiduously avoid any and all asinine alliterations'
1439575093
</pre><br>
</td></tr>

<tr><td valign=top><a name="4"></a><tt>128!:4 y</tt></td>
<td valign=top><b>RNG Raw.</b>  See <a href="d640.htm">Roll/Deal (<tt>?</tt>)</a>.
<br><br></td></tr>

<tr><td valign=top><a name="5"></a><tt>128!:5 y</tt></td>
<td valign=top><p><b>Is NaN. </b>
If<tt> z=: 128!:5 y</tt> ,<tt> </tt>then<tt> z </tt>has the same shape
as<tt> y </tt>and an atom of<tt> z </tt>
is 1 if and only if the corresponding atom of<tt> y </tt>is<tt> _. </tt>(NaN)
or contains<tt> _. </tt>.</p>

<p>Examples:</p>
<pre>
   (128!:5) 3.45 6 _. 7
0 0 1 0
   (128!:5) t=. 2 2$1 2;3 4 5;(&lt;&lt;_. 7);_.
0 0
1 1
   (128!:5) &lt; t
1
   (128!:5) ;:'Cogito, ergo sum. _.'
0 0 0 0 0
</pre><br>

</td></tr>

<TR><TD valign=top><a name="6"></a><tt>[x] 128!:6 y</tt></td>
<TD><B>SHA</B>. The Secure Hash Algorithms are a family of cryptographic hash functions.

<p><tt> x 128!:6 y </tt>computes the SHA of string<tt> y </tt>
according to<tt> x</tt>, results are hexadecimal strings.</p>
<pre>
  1    SHA1
  2    SHA224
  3    SHA256
  4    SHA384
  5    SHA512
  6    SHA3_224
  7    SHA3_256
  8    SHA3_384
  9    SHA3_512
</pre>
<p>_1 to _9 are the same as 1 to 9 but with results in binary strings.
<br>
<tt> 128!:6 y </tt> is equivalent to<tt> 1 (128!:6) y</tt> .</p>

<p>Examples:</p>
<pre>
   128!:6 'abc'
a9993e364706816aba3e25717850c26c9cd0d89d
   1 (128!:6) 'abc'
a9993e364706816aba3e25717850c26c9cd0d89d
   a. i. _1 (128!:6) 'abc'
169 153 62 54 71 6 129 106 186 62 37 113 120 80 194 108 156 208 216 157
</pre>
</td></tr>

</table>

<br>

<!--bottom jump start--><hr><a href="special.htm">&gt;&gt;</a>&nbsp;
<a href="dx018.htm">&lt;&lt;</a>&nbsp;
<a href="../user/contents.htm">Usr</a>&nbsp;
<a href="../primer/contents.htm">Pri</a>&nbsp;
<a href="../jforc/contents.htm">JfC</a>&nbsp;
<a href="../learning/contents.htm">LJ</a>&nbsp;
<a href="../phrases/contents.htm">Phr</a>&nbsp;
<a href="../dictionary/contents.htm">Dic</a>&nbsp;
<a href="../dictionary/vocabul.htm">Voc</a>&nbsp;
<a href="../dictionary/xmain.htm">!:</a>&nbsp;
<a href="../index.htm">Help</a>&nbsp;
Dictionary<!--bottom jump end--></body>
</html>
