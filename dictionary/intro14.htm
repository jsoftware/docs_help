<html>
<head><link rel=stylesheet href="../jdoc.css" type="text/css"><title>Intro 14. Partitions</title>
<link href="../jdoc.css" rel=stylesheet></head>
<body><!--top jump start--><a href="intro15.htm">&gt;&gt;</a>&nbsp;
<a href="intro13.htm">&lt;&lt;</a>&nbsp;
<a href="../user/contents.htm">Usr</a>&nbsp;
<a href="../primer/contents.htm">Pri</a>&nbsp;
<a href="../jforc/contents.htm">JfC</a>&nbsp;
<a href="../learning/contents.htm">LJ</a>&nbsp;
<a href="../phrases/contents.htm">Phr</a>&nbsp;
<a href="../dictionary/contents.htm">Dic</a>&nbsp;
<a href="../dictionary/vocabul.htm">Voc</a>&nbsp;
<a href="../dictionary/xmain.htm">!:</a>&nbsp;
<a href="../index.htm">Help</a>&nbsp;
Dictionary<hr><!--top jump end-->

<br><font size=+2><b>14. Partitions</b></font><br><br>

The function<tt> sum=: +/ </tt>applies to an entire list argument; 
to compute <i>partial sums</i> or <i>subtotals</i>, 
it is necessary to apply it to each prefix of the argument.  For example:<br>

<pre>
   sum=: +/ 
   a=: 1 2 3 4 5 6
   (sum a) ; (sum\ a)
+--+--------------+
|21|1 3 6 10 15 21|
+--+--------------+
</pre>

The symbol<tt> \ </tt>denotes the <i>prefix</i> adverb, 
which applies its argument (in this case<tt> sum</tt>)<tt> </tt>
to each prefix of the eventual argument.  The adverb<tt> \. </tt>applies 
similarly to suffixes:<br>

<pre>
   sum\. a
21 20 18 15 11 6
</pre>

The monad<tt> &lt; </tt>simply <i>boxes</i> its arguments, 
and the verbs<tt> &lt;\ </tt>and<tt> &lt;\. </tt>therefore show 
the effects of partitions with great clarity.  For example:<br>

<pre>
   &lt;1 2 3
+-----+
|1 2 3|
+-----+

   (&lt;1),(&lt;1 2),(&lt;1 2 3)
+-+---+-----+
|1|1 2|1 2 3|
+-+---+-----+

   &lt;\ a
+-+---+-----+-------+---------+-----------+
|1|1 2|1 2 3|1 2 3 4|1 2 3 4 5|1 2 3 4 5 6|
+-+---+-----+-------+---------+-----------+

   &lt;\. a
+-----------+---------+-------+-----+---+-+
|1 2 3 4 5 6|2 3 4 5 6|3 4 5 6|4 5 6|5 6|6|
+-----------+---------+-------+-----+---+-+
</pre>

The oblique adverb<tt> /. </tt>partitions a <i>table</i> 
along diagonal lines.  Thus:<br>

<pre>
   &lt;/. t=: 1 2 1 */ 1 3 3 1
+-+---+-----+-----+---+-+
|1|3 2|3 6 1|1 6 3|2 3|1|
+-+---+-----+-----+---+-+

   t ; (sum/. t) ; (10 #. sum/. t) ; (121*1331)
+-------+-------------+------+------+
|1 3 3 1|1 5 10 10 5 1|161051|161051|
|2 6 6 2|             |      |      |
|1 3 3 1|             |      |      |
+-------+-------------+------+------+
</pre>
<br>

<P ALIGN=CENTER><b>Exercises</b></p>

<table>
<tr><td valign=top>14.1 &nbsp;</td>
<td>Define programs analogous to<tt> sum=:+/\ </tt>for 
progressive products, progressive maxima, and progressive minima.<br><br>
</td></tr>

<tr><td valign=top>14.1 &nbsp;</td>
<td>Treat the following programs and comments like those of 
Section 12, that is, as exercises in reading and writing.  
Experiment with expressions such as<tt> c pol x </tt>and<tt> c pp d </tt>
and<tt> (c pp d) pol x </tt>with<tt> c=:1 3 3 1 </tt>
and<tt> d=:1 2 1 </tt>and<tt> x=:i.5</tt> .<tt> </tt>
See the dictionary or <a href="intro20.htm">Section 20</a> 
for the use of rank:<br><br>

<table>
<tr><td><tt>pol=: +/@([*]^i.@#@[)&quot;1 0 &nbsp;</tt></td><td>Polynomial</td></tr>
<tr><td><tt>pp=: +//.@(*/)</tt></td><td>Polynomial product</td></tr>
<tr><td><tt>pp11=: 1 1&amp;pp </tt></td><td>Polynomial product by<tt> 1 1</tt></td></tr>
<tr><td><tt>pp11 d</tt></td></tr>
<tr><td><tt>pp11^:5 (1)</tt></td></tr>
<tr><td><tt>ps=: +/@,:</tt></td><td>Polynomial sum</td></tr>
</table>
</td></tr>
</table>

<br>
<br><br>

<!--bottom jump start--><hr><a href="intro15.htm">&gt;&gt;</a>&nbsp;
<a href="intro13.htm">&lt;&lt;</a>&nbsp;
<a href="../user/contents.htm">Usr</a>&nbsp;
<a href="../primer/contents.htm">Pri</a>&nbsp;
<a href="../jforc/contents.htm">JfC</a>&nbsp;
<a href="../learning/contents.htm">LJ</a>&nbsp;
<a href="../phrases/contents.htm">Phr</a>&nbsp;
<a href="../dictionary/contents.htm">Dic</a>&nbsp;
<a href="../dictionary/vocabul.htm">Voc</a>&nbsp;
<a href="../dictionary/xmain.htm">!:</a>&nbsp;
<a href="../index.htm">Help</a>&nbsp;
Dictionary<!--bottom jump end--></body>
</html>
