<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word" xmlns:st2="urn:schemas:contacts"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=File-List href="jforcprogrammers_files/filelist.xml">
<link rel=Edit-Time-Data href="jforcprogrammers_files/editdata.mso">
<link rel=OLE-Object-Data href="jforcprogrammers_files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<link rel=stylesheet href="../jdoc.css" type="text/css"><title>Loopless Code II: Adverbs / and ~</title><link rel=stylesheet href="stylesheet.htm" type="text/css"></head>

<body lang=EN-US link=blue vlink=purple style='tab-interval:.5in'><!--top jump start--><a href="continuing_to_write_in_j.htm">&gt;&gt;</a>&nbsp;
<a href="more_verbs.htm">&lt;&lt;</a>&nbsp;
<a href="../user/contents.htm">Usr</a>&nbsp;
<a href="../primer/contents.htm">Pri</a>&nbsp;
<a href="../jforc/contents.htm">JfC</a>&nbsp;
<a href="../learning/contents.htm">LJ</a>&nbsp;
<a href="../phrases/contents.htm">Phr</a>&nbsp;
<a href="../dictionary/contents.htm">Dic</a>&nbsp;
<a href="../dictionary/vocabul.htm">Voc</a>&nbsp;
<a href="../dictionary/xmain.htm">!:</a>&nbsp;
<a href="../index.htm">Help</a>&nbsp;
J for C Programmers<hr><!--top jump end--><div class=Section2><h1 style='margin-left:0in;text-indent:0in;mso-text-indent-alt:0in'><a
name="_Toc191734358"></a><a name="_Toc5414567"></a><a name="_Toc1896202"><span
style='mso-bookmark:_Toc5414567'><span style='mso-bookmark:_Toc191734358'><![if !supportLists]><span
style='mso-bidi-font-family:"Times New Roman"'><span style='mso-list:Ignore'><span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>9. <span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span><![endif]>Loopless
Code II: Adverbs </span></span></a><span style='mso-bookmark:_Toc1896202'><span
style='mso-bookmark:_Toc5414567'><span style='mso-bookmark:_Toc191734358'><span
class=Jcode><span style='mso-bidi-font-family:Arial;mso-bidi-font-weight:normal'>/</span></span>
and </span></span></span><span style='mso-bookmark:_Toc1896202'><span
style='mso-bookmark:_Toc5414567'><span style='mso-bookmark:_Toc191734358'><span
class=Jcode><span style='mso-bidi-font-family:Arial;mso-bidi-font-weight:normal'>~</span></span></span></span></span></h1>

<p class=MsoBodyText>The monad <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>+/</span></span>, which sums the items of its operand, is a
special case of the use of the adverb <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>/</span></span><span style='font-family:"Courier New";
mso-bidi-font-family:"Times New Roman"'>&nbsp;</span>.<span
style='mso-spacerun:yes'>&nbsp; </span>It is time to learn about adverbs, and other
uses of this one.</p>

<p class=Section><a name="_Toc191734359"></a><a name="_Toc5414568"></a><a
name="_Toc5414419"><span style='mso-bookmark:_Toc5414568'><span
style='mso-bookmark:_Toc191734359'>Modifiers</span></span></a></p>

<p class=MsoBodyText><!--[if supportFields]><span style='mso-element:field-begin'></span><span
style='mso-spacerun:yes'>&nbsp;</span>XE &quot;Modifier:order of execution&quot; <![endif]--><!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->An adverb is a modifier.<span
style='mso-spacerun:yes'>&nbsp; </span>It appears to the right of a noun or verb;
the prototype is <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u&nbsp;a</span></span>
where <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u</span></span>
is the noun or verb and <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>a</span></span> is the adverb.<span
style='mso-spacerun:yes'>&nbsp; </span>The <span class=Definition>compound</span> <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u&nbsp;a</span></span>
is a new entity, and not necessarily the same part of speech as <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u</span></span><span
style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>&nbsp;</span>.<span
style='mso-spacerun:yes'>&nbsp; </span>When the compound <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>u&nbsp;a</span></span> is
executed, it performs the function given by the definition of <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>a</span></span>
and has access to <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u</span></span>
during its execution.&nbsp; If <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u&nbsp;a</span></span>
is a verb, then it also has access to the operands of the verb during its
execution; the verb <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u&nbsp;a</span></span>
will then be invoked as <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>u&nbsp;a&nbsp;y</span></span> if monadic or <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>x&nbsp;u&nbsp;a&nbsp;y</span></span>
if dyadic.</p>

<p class=MsoBodyText>You will note that I didn't have to write <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>x&nbsp;(u&nbsp;a)&nbsp;y</span></span><span
style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>&nbsp;</span>.<span
style='mso-spacerun:yes'>&nbsp; </span>While J gives all verbs equal precedence and
executes them right-to-left, it does give modifiers (adverbs and conjunctions)
higher precedence than verbs, in the same way that C and standard mathematical
notation give multiplication precedence over addition.<span
style='mso-spacerun:yes'>&nbsp; </span>We will discuss the parsing rules in detail
later; for now, know that modifiers are bound to their operands before verbs
are executed, and that if the left operand of a modifier has a conjunction to
its left (e.&nbsp;g. <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>x&nbsp;c&nbsp;y&nbsp;a</span></span>),
the conjunction is bound to its own arguments first, and the result of that
becomes the left argument to the modifier: <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>x&nbsp;c&nbsp;y&nbsp;a</span></span>
is <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>(x&nbsp;c&nbsp;y)&nbsp;a</span></span>,
not <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>x&nbsp;c&nbsp;(y&nbsp;a)&nbsp;</span></span>.<span
style='mso-spacerun:yes'>&nbsp; </span>In other words, modifiers associate
left-to-right.&nbsp; So, <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>+&quot;1/</span></span> (in
which <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>&quot;</span></span>
is a conjunction and <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>/</span></span>
is an adverb) is the same as <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>(+&quot;1)/</span></span>, <b>not</b> <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>+&quot;(1/)</span></span><span
style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>&nbsp;</span>.<span
style='mso-spacerun:yes'>&nbsp; </span>The phrase <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>|&nbsp;+/&quot;1&nbsp;(4)&nbsp;+&nbsp;i.&nbsp;3&nbsp;3</span></span>
is executed as <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>|&nbsp;((+/&quot;1)&nbsp;((4)&nbsp;+&nbsp;(i.&nbsp;3&nbsp;3)))</span></span>,
in accordance with the rule: right-to-left among verbs, but applying modifiers
first.&nbsp; Note that I had to put
parentheses around the <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>4</span></span>, because <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>&quot;1&nbsp;4</span></span>
would have been interpreted as rank <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>1&nbsp;4</span></span>&nbsp;: collecting adjacent numbers
into a list is done before anything is executed.</p>

<p class=MsoBodyText>J includes a rich set of modifiers and even allows you to
write your own, though many J programmers will never write a modifier. </p>

<p class=Section><a name="_Toc5414569"></a><a name="_Toc5414420"></a><a
name="_Toc191734360"><span style='mso-bookmark:_Toc5414420'><span
style='mso-bookmark:_Toc5414569'>What 'Monadic' and 'Dyadic' Mean For Modifiers</span></span></a><span
style='mso-bookmark:_Toc5414420'><span style='mso-bookmark:_Toc5414569'></span></span></p>

<p class=MsoBodyText><span style='mso-bookmark:_Toc5414420'><span
style='mso-bookmark:_Toc5414569'>An adverb, for example </span></span><span
style='mso-bookmark:_Toc5414420'><span style='mso-bookmark:_Toc5414569'><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>/</span></span>
which we will be studying next, is applied to its left operand.<span
style='mso-spacerun:yes'>&nbsp; </span>So, if that operand is the verb </span></span><span
style='mso-bookmark:_Toc5414420'><span style='mso-bookmark:_Toc5414569'><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u</span></span>,
the combination is </span></span><span style='mso-bookmark:_Toc5414420'><span
style='mso-bookmark:_Toc5414569'><span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>u/</span></span>&nbsp;. </span></span></p>

<p class=MsoBodyText><span style='mso-bookmark:_Toc5414420'><span
style='mso-bookmark:_Toc5414569'>This pair </span></span><span
style='mso-bookmark:_Toc5414420'><span style='mso-bookmark:_Toc5414569'><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u/</span></span>
defines a verb, and that compound, like all verbs, has monadic and dyadic versions.<span
style='mso-spacerun:yes'>&nbsp; </span>When we say 'monad&nbsp;</span></span><span
style='mso-bookmark:_Toc5414420'><span style='mso-bookmark:_Toc5414569'><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>/</span></span>'
or 'monad&nbsp;</span></span><span style='mso-bookmark:_Toc5414420'><span
style='mso-bookmark:_Toc5414569'><span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>u/</span></span>' we are referring to instances of </span></span><span
style='mso-bookmark:_Toc5414420'><span style='mso-bookmark:_Toc5414569'><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u/&nbsp;y</span></span>;
when we say 'dyad&nbsp;</span></span><span style='mso-bookmark:_Toc5414420'><span
style='mso-bookmark:_Toc5414569'><span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>/</span></span>' or 'dyad&nbsp;</span></span><span
style='mso-bookmark:_Toc5414420'><span style='mso-bookmark:_Toc5414569'><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u/</span></span>'
we are referring to instances of </span></span><span style='mso-bookmark:_Toc5414420'><span
style='mso-bookmark:_Toc5414569'><span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>x&nbsp;u/&nbsp;y</span></span>&nbsp;.</span></span></p>

<p class=MsoBodyText><span style='mso-bookmark:_Toc5414420'><span
style='mso-bookmark:_Toc5414569'>The definition of the adverb defines both
valences.&nbsp; As with verbs, the monadic and
dyadic cases are independently defined.</span></span></p>

<p class=MsoBodyText><span style='mso-bookmark:_Toc5414420'><span
style='mso-bookmark:_Toc5414569'>Any adverb is allowed to inspect its left
operand before deciding what derived verb to create.<span
style='mso-spacerun:yes'>&nbsp; </span>Many of J's primitive adverbs produce
different derived verbs depending on whether the operand is a noun or a
verb.&nbsp; When the operand is a noun, we
refer to it as </span></span><span style='mso-bookmark:_Toc5414420'><span
style='mso-bookmark:_Toc5414569'><span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>m</span></span> to distinguish it from a verb operand </span></span><span
style='mso-bookmark:_Toc5414420'><span style='mso-bookmark:_Toc5414569'><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u</span></span>&nbsp;.<span
style='mso-spacerun:yes'>&nbsp; </span>The derived verbs for noun and verb operands
may be completely different, and for each the two valences can be independently
defined.&nbsp; So, the simple case of </span></span><span
style='mso-bookmark:_Toc5414420'><span style='mso-bookmark:_Toc5414569'><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>x/</span></span>
has four possible derived verbs, depending first on whether </span></span><span
style='mso-bookmark:_Toc5414420'><span style='mso-bookmark:_Toc5414569'><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>x</span></span>
is a noun or a verb and then on whether </span></span><span style='mso-bookmark:
_Toc5414420'><span style='mso-bookmark:_Toc5414569'><span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>x/</span></span> is used as a
monad or a dyad.</span></span></p>

<p class=MsoBodyText><span style='mso-bookmark:_Toc5414420'><span
style='mso-bookmark:_Toc5414569'>It sounds like a lot to remember but as usual
the important thing is to know where to look something up when you need a
function.</span></span></p>

<p class=MsoBodyText><span style='mso-bookmark:_Toc5414420'><span
style='mso-bookmark:_Toc5414569'>Conjunctions are just like adverbs except that
they take two operands, so there are four combinations of noun/verb operands
for a conjunction </span></span><span style='mso-bookmark:_Toc5414420'><span
style='mso-bookmark:_Toc5414569'><span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>c</span></span> (</span></span><span style='mso-bookmark:
_Toc5414420'><span style='mso-bookmark:_Toc5414569'><span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>u&nbsp;c&nbsp;v</span></span>, </span></span><span
style='mso-bookmark:_Toc5414420'><span style='mso-bookmark:_Toc5414569'><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>m&nbsp;c&nbsp;v</span></span>,
</span></span><span style='mso-bookmark:_Toc5414420'><span style='mso-bookmark:
_Toc5414569'><span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u&nbsp;c&nbsp;n</span></span>,
and </span></span><span style='mso-bookmark:_Toc5414420'><span
style='mso-bookmark:_Toc5414569'><span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>m&nbsp;c&nbsp;n</span></span>), each of which has monadic
and dyadic valences.</span></span></p>

<p class=Section><span style='mso-bookmark:_Toc5414420'><span style='mso-bookmark:
_Toc5414569'><a name="_Toc191734361">The Adverb Monad </a></span></span><span
style='mso-bookmark:_Toc5414420'><span style='mso-bookmark:_Toc5414569'><span
style='mso-bookmark:_Toc191734361'><span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman";mso-bidi-font-weight:bold'>u/</span></span></span></span></span><span
style='mso-bookmark:_Toc191734361'> (Insert)</span></p>

<p class=MsoBodyText><!--[if supportFields]><span style='mso-element:field-begin'></span><span
style='mso-spacerun:yes'>&nbsp;</span>XE &quot;u/ monad&quot; <![endif]--><!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->Monad <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>u/</span></span> inserts <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u</span></span>
between items of <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y</span></span><span
style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>&nbsp;</span>.<span
style='mso-spacerun:yes'>&nbsp; </span>Monad <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>u/</span></span> has infinite
rank.&nbsp; As a simple example, <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>+/&nbsp;1&nbsp;2&nbsp;3</span></span>
is equivalent to <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>1&nbsp;+&nbsp;2&nbsp;+&nbsp;3</span></span>&nbsp;:</p>

<p class=Jcodemultiline>&nbsp;&nbsp; +/ 1 2 3</p>

<p class=Jcodemultiline>6</p>

<p class=BodyTextnoleader>As usual, we can use <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>fndisplay</span></span> to
explain what's happening:</p>

<p class=Jcodemultiline>&nbsp;&nbsp; defverbs 'plus&quot;0'</p>

<p class=Jcodemultiline>&nbsp;&nbsp; plus/ 1 2 3</p>

<p class=Jcodemultiline>+---------------+</p>

<p class=Jcodemultiline>|1 plus 2 plus 3|</p>

<p class=Jcodemultiline>+---------------+</p>

<p class=MsoBodyText>The great power of the adverb concept is that <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u</span></span>
can be any verb; it's not restricted to <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>+</span></span>, <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>-</span></span>,
or any other subset of verbs (it can even be a user-written verb).<span
style='mso-spacerun:yes'>&nbsp; </span>What would monad <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>&gt;./</span></span> mean?<span
style='mso-spacerun:yes'>&nbsp; </span>Well, <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>&gt;./&nbsp;1&nbsp;2&nbsp;3</span></span>
would be equivalent to <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>1&nbsp;&gt;.&nbsp;2&nbsp;&gt;.&nbsp;3</span></span>; since
each <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>&gt;.</span></span>
picks the larger operand, the result is going to be the largest number; so
monad <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>&gt;./</span></span>
means 'maximum':</p>

<p class=Jcodemultiline>&nbsp;&nbsp; &gt;./ 3 1 4 1
5 9</p>

<p class=Jcodemultiline>9</p>

<p class=BodyTextnoleader>and of course 'minimum' is similar:</p>

<p class=Jcodemultiline>&nbsp;&nbsp; &lt;./ 3 1 4 1
5 9</p>

<p class=Jcodemultiline>1</p>

<p class=MsoBodyText>What about monad <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>,/</span></span>?&nbsp;
Convince yourself that it combines the first two axes of its operand:</p>

<p class=Jcodemultiline>&nbsp;&nbsp; ,/ i. 2 3</p>

<p class=Jcodemultiline>0 1 2 3 4 5</p>

<p class=Jcodemultiline>&nbsp;&nbsp; defverbs 'comma'</p>

<p class=Jcodemultiline>&nbsp;&nbsp; comma/ i. 2 3</p>

<p class=Jcodemultiline>+-------------------+</p>

<p class=Jcodemultiline>|(0 1 2) comma 3 4 5|</p>

<p class=Jcodemultiline>+-------------------+</p>

<p class=Jcodemultiline>&nbsp;&nbsp; i. 2 3 4</p>

<p class=Jcodemultiline>0&nbsp; 1<span
style='mso-spacerun:yes'>&nbsp; </span>2&nbsp; 3</p>

<p class=Jcodemultiline>4&nbsp; 5<span
style='mso-spacerun:yes'>&nbsp; </span>6&nbsp; 7</p>

<p class=Jcodemultiline>8&nbsp; 9 10 11</p>

<p class=Jcodemultiline><o:p>&nbsp;</o:p></p>

<p class=Jcodemultiline>12 13 14 15</p>

<p class=Jcodemultiline>16 17 18 19</p>

<p class=Jcodemultiline>20 21 22 23</p>

<p class=Jcodemultiline>&nbsp;&nbsp; $ ,/ i. 2 3 4</p>

<p class=Jcodemultiline>6 4</p>

<p class=Jcodemultiline>&nbsp;&nbsp; ,/ i. 2 3 4</p>

<p class=Jcodemultiline>&nbsp;0<span
style='mso-spacerun:yes'>&nbsp; </span>1&nbsp;
2&nbsp; 3</p>

<p class=Jcodemultiline>&nbsp;4<span
style='mso-spacerun:yes'>&nbsp; </span>5&nbsp;
6&nbsp; 7</p>

<p class=Jcodemultiline>&nbsp;8<span
style='mso-spacerun:yes'>&nbsp; </span>9 10 11</p>

<p class=Jcodemultiline>12 13 14 15</p>

<p class=Jcodemultiline>16 17 18 19</p>

<p class=Jcodemultiline>20 21 22 23</p>

<p class=MsoBodyText>How many atoms are in <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>y</span></span>?<span
style='mso-spacerun:yes'>&nbsp; </span>Why, <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>*/&nbsp;$&nbsp;y&nbsp;</span></span>:</p>

<p class=Jcodemultiline>&nbsp;&nbsp; */ $ i. 2 3 4</p>

<p class=Jcodemultiline>24</p>

<p class=MsoBodyText>We can verify that the rows and columns of the following
magic square sum to the same value:</p>

<p class=Jcodemultiline>&nbsp;&nbsp; +/ 3 3 $ 8 1
6&nbsp; 3 5 7&nbsp;
4 9 2</p>

<p class=Jcodemultiline>15 15 15</p>

<p class=Jcodemultiline>&nbsp;&nbsp; +/&quot;1 (3
3) $ 8 1 6&nbsp; 3 5 7<span
style='mso-spacerun:yes'>&nbsp; </span>4 9 2</p>

<p class=Jcodemultiline>15 15 15</p>

<p class=MsoBodyText>As this last example shows, the items can be of any
shape.&nbsp; Applying <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>+/</span></span> to the rank-2
array added up 1-cells, while applying <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>+/&quot;1</span></span> added up
the 0-cells within each 1-cell.</p>

<p class=MsoBodyText>Have you wondered what would happen if there is no item or
only 1 item?&nbsp; Good on you if you
did.&nbsp; The answer is: if there is only 1
item, the result is just that cell; if there is no cell, the result is a cell
of identity elements.&nbsp; <!--[if supportFields]><span
style='mso-element:field-begin'></span><span
style='mso-spacerun:yes'>&nbsp;</span>XE &quot;identity element&quot; <![endif]--><!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->The <span class=Definition>identity
element</span> <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>i</span></span>
(also called the<!--[if supportFields]><span style='mso-element:field-begin'></span>
XE &quot;neutral&quot; <![endif]--><!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]--><span
style='mso-spacerun:yes'>&nbsp;</span><span class=Definition>neutral</span>) for a
dyadic verb <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>v</span></span>
is that value of <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>i</span></span>
such that <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>i&nbsp;v&nbsp;y</span></span>
and <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y&nbsp;v&nbsp;i</span></span>
are <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y</span></span>
for any choice of <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y</span></span><span
style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'> </span>in
the domain of <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>v&nbsp;</span></span>.<span
style='mso-spacerun:yes'>&nbsp; </span>For example, the identity element for <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>+</span></span>
is <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>0</span></span>,
because <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>0&nbsp;+&nbsp;y</span></span>
is always <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y</span></span><span
style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>&nbsp;</span>.<span
style='mso-spacerun:yes'>&nbsp; </span>The identity element for <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>*</span></span> is <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>1</span></span>,
and for <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>&lt;.</span></span>
is <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>_</span></span><span
style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>&nbsp;</span>.<span
style='mso-spacerun:yes'>&nbsp; </span>If there is no identity element for a verb <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>v</span></span>
(for example, <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>$</span></span>
has no identity element), you will get a domain error if you apply <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>v/ </span></span>to
an empty list.&nbsp; Examples:</p>

<p class=Jcodemultilinefirst>&nbsp;&nbsp; +/ 0$0</p>

<p class=Jcodemultiline>0</p>

<p class=Jcodemultiline>&nbsp;&nbsp; */ 0$0</p>

<p class=Jcodemultiline>1</p>

<p class=BodyTextnoleader>Empty list; result is the identity element.</p>

<p class=Jcodemultilinefirst>&nbsp;&nbsp; +/ 1 3 $
3 5 7</p>

<p class=Jcodemultiline>3 5 7</p>

<p class=BodyTextnoleader>There is a single 1-cell, so the result is that
cell.&nbsp; This result has shape <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>3</span></span>,
<b>not</b> <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>1&nbsp;3</span></span><span
style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>&nbsp;</span>.<span
style='mso-spacerun:yes'>&nbsp; </span>In general, if <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>y</span></span> has only one
item, <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u/&nbsp;y</span></span>
produces <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>{.y</span></span>
regardless of what <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u</span></span>
is.</p>

<p class=Jcodemultilinefirst>&nbsp;&nbsp; +/ 0 3 $
0</p>

<p class=Jcodemultiline>0 0 0</p>

<p class=BodyTextnoleader>There are no 1-cells, so the result is a cell
of identity elements.&nbsp; Note that even
though there are no cells, the cell still has a shape which is made visible by <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>+/</span></span><span
style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>&nbsp;</span>.</p>

<p class=Jcodemultilinefirst>&nbsp;&nbsp; $/ 0$0</p>

<p class=Jcodemultiline>|domain error</p>

<p class=Jcodemultiline>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $/0$0</p>

<p class=BodyTextnoleader>There is no identity element for <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>$</span></span>&nbsp;.</p>

<p class=MsoBodyText>If you don't want to figure out what the identity element
for a verb <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>v</span></span>
is you can ask the interpreter by typing <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>v/&nbsp;0$0</span></span><span
style='font-family:"Courier New";mso-bidi-font-family:"Times New Roman"'>&nbsp;</span>.</p>

<p class=MsoBodyText>Before moving on you should note that since <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>v/&nbsp;1&nbsp;2&nbsp;3</span></span>
is equivalent to <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>1&nbsp;v&nbsp;2&nbsp;v&nbsp;3</span></span>,
evaluation starts at the end of the list and moves toward the beginning: so <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>2&nbsp;v&nbsp;3
</span></span>is evaluated first.</p>

<p class=Section><a name="_Toc191734362"></a><a name="_Toc5414570"></a><a
name="_Toc5414421"></a><a name="_Toc1896203"><span style='mso-bookmark:_Toc5414421'><span
style='mso-bookmark:_Toc5414570'><span style='mso-bookmark:_Toc191734362'>The
adverb ~</span></span></span></a></p>

<p class=MsoBodyText><!--[if supportFields]><span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'><span style='mso-element:field-begin'></span></span></span><span
style='mso-spacerun:yes'>&nbsp;</span>XE &quot;~&quot; <![endif]--><!--[if supportFields]><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'><span
style='mso-element:field-end'></span></span></span><![endif]--><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>~</span></span>
is an adverb.&nbsp; Like all adverbs, it has a
monadic and dyadic form.&nbsp; The dyadic form
<span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>x&nbsp;u~&nbsp;y</span></span>
is equivalent to <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y&nbsp;u&nbsp;x</span></span>;
in other words, the operands of <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>u</span></span> are reversed.<span
style='mso-spacerun:yes'>&nbsp; </span>The ranks of dyad&nbsp;<span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>u~</span></span> are the same as
those of dyad&nbsp;<span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u</span></span>,
but with left and right rank interchanged.&nbsp;
For advanced J dyad&nbsp;<span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>~</span></span> is indispensable; even in ordinary use it
can save typing and obviate the need for parentheses:</p>

<p class=Jcodemultiline>&nbsp;&nbsp; (10 + 2) % 3</p>

<p class=Jcodemultiline>4</p>

<p class=Jcodemultiline>&nbsp;&nbsp; 3 %~ 10 + 2</p>

<p class=Jcodemultiline>4</p>

<p class=MsoBodyText>Using <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>%~</span></span> to mean '<span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>y</span></span> divided by <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>x</span></span>',
we can have right-to-left execution without parentheses.</p>

<p class=Jcodemultiline>&nbsp;&nbsp; -~/ 2 4</p>

<p class=Jcodemultiline>2</p>

<p class=BodyTextnoleader>When we know <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>y</span></span> contains
exactly&nbsp; 2 items, <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>-/&nbsp;y</span></span> is
a convenient shorthand to subtract the second from the first without having to
write <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>({.y)&nbsp;-&nbsp;({:y)&nbsp;</span></span>.<span
style='mso-spacerun:yes'>&nbsp; </span>To subtract the first from the second, we
simply invert the order of subtraction with <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>-~&nbsp;</span></span>.</p>

<p class=MsoBodyText>You can use <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>~</span></span> to create mnemonics.<span
style='mso-spacerun:yes'>&nbsp; </span>If you have trouble remembering that the
arguments to dyad&nbsp;<span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>e.</span></span> are reversed from those to dyad&nbsp;<span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>i.</span></span>,
you can write</p>

<p class=Jcodemultiline>contains =: e.~</p>

<p class=BodyTextnoleader>and then</p>

<p class=Jcodemultiline>&nbsp;&nbsp; 'abcdef'
contains 'ax'</p>

<p class=Jcodemultiline>1 0</p>

<p class=BodyTextnoleader>Or, if you want to be able to write</p>

<p class=Jcodemultiline>&nbsp;&nbsp; 7 mod 2</p>

<p class=Jcodemultiline>1</p>

<p class=BodyTextnoleader>as in mathematics, you can get that with</p>

<p class=Jcodemultiline>&nbsp;&nbsp; mod =: |~</p>

<p class=MsoBodyText>The monadic form <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>u~&nbsp;y</span></span> has infinite rank and is equivalent
to <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y&nbsp;u&nbsp;y</span></span>,
i.&nbsp;e. it applies <i>dyad</i>&nbsp;<span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>u</span></span> with both the
left and the right operands equal to the one operand of monad&nbsp;<span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u~&nbsp;</span></span>.<span
style='mso-spacerun:yes'>&nbsp; </span>As with dyad&nbsp;<span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>u~</span></span>, most uses of
monad&nbsp;<span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u~</span></span>
are esoteric, but we know one already: we can sort <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>y</span></span> into ascending
order with either <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y&nbsp;/:&nbsp;y</span></span>
or our new equivalent <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>/:~&nbsp;y&nbsp;</span></span>:</p>

<p class=Jcodemultiline>&nbsp;&nbsp; /:~ 3 1 4 1 5
9</p>

<p class=Jcodemultiline>1 1 3 4 5 9</p>

</div><!--bottom jump start--><hr><a href="continuing_to_write_in_j.htm">&gt;&gt;</a>&nbsp;
<a href="more_verbs.htm">&lt;&lt;</a>&nbsp;
<a href="../user/contents.htm">Usr</a>&nbsp;
<a href="../primer/contents.htm">Pri</a>&nbsp;
<a href="../jforc/contents.htm">JfC</a>&nbsp;
<a href="../learning/contents.htm">LJ</a>&nbsp;
<a href="../phrases/contents.htm">Phr</a>&nbsp;
<a href="../dictionary/contents.htm">Dic</a>&nbsp;
<a href="../dictionary/vocabul.htm">Voc</a>&nbsp;
<a href="../dictionary/xmain.htm">!:</a>&nbsp;
<a href="../index.htm">Help</a>&nbsp;
J for C Programmers<!--bottom jump end--></BODY></HTML>
