<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word" xmlns:st2="urn:schemas:contacts"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=File-List href="jforcprogrammers_files/filelist.xml">
<link rel=Edit-Time-Data href="jforcprogrammers_files/editdata.mso">
<link rel=OLE-Object-Data href="jforcprogrammers_files/oledata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<link rel=stylesheet href="../jdoc.css" type="text/css"><title>Loopless Code III--Adverbs \ and \.</title><link rel=stylesheet href="stylesheet.htm" type="text/css"></head>

<body lang=EN-US link=blue vlink=purple style='tab-interval:.5in'><!--top jump start--><a href="verbs_for_arithmetic.htm">&gt;&gt;</a>&nbsp;
<a href="empty_operands.htm">&lt;&lt;</a>&nbsp;
<a href="../user/contents.htm">Usr</a>&nbsp;
<a href="../primer/contents.htm">Pri</a>&nbsp;
<a href="../jforc/contents.htm">JfC</a>&nbsp;
<a href="../learning/contents.htm">LJ</a>&nbsp;
<a href="../phrases/contents.htm">Phr</a>&nbsp;
<a href="../dictionary/contents.htm">Dic</a>&nbsp;
<a href="../dictionary/vocabul.htm">Voc</a>&nbsp;
<a href="../dictionary/xmain.htm">!:</a>&nbsp;
<a href="../index.htm">Help</a>&nbsp;
J for C Programmers<hr><!--top jump end--><div class=Section2><h1 style='margin-left:0in;text-indent:0in;mso-text-indent-alt:0in'><a
name="_Toc191734379"></a><a name="_Toc5414583"></a><a name="_Toc1896213"><span
style='mso-bookmark:_Toc5414583'><span style='mso-bookmark:_Toc191734379'><![if !supportLists]><span
style='mso-bidi-font-family:"Times New Roman"'><span style='mso-list:Ignore'><span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>14. </span></span><![endif]>Loopless Code III--Adverbs </span></span></a><span
style='mso-bookmark:_Toc1896213'><span style='mso-bookmark:_Toc5414583'><span
style='mso-bookmark:_Toc191734379'><span class=Jcode><span style='mso-bidi-font-family:
Arial;mso-bidi-font-weight:normal'>\</span></span> and </span></span></span><span
style='mso-bookmark:_Toc1896213'><span style='mso-bookmark:_Toc5414583'><span
style='mso-bookmark:_Toc191734379'><span class=Jcode><span style='mso-bidi-font-family:
Arial;mso-bidi-font-weight:normal'>\.</span></span></span></span></span></h1>

<p class=MsoBodyText>We have learned about ordinary verbs that operate on the
cells of an operand, and we have learned <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>u/</span></span> which operates
between all the cells of its operand.&nbsp; In
between those extremes are verbs that operate on subsets of the cells of its
operand.&nbsp; In this chapter we will learn a
couple of adverbs that apply verbs to subsets of cells chosen according to
simple rules; in later chapters we will learn how to form irregular subsets.</p>

<p class=MsoBodyText><!--[if supportFields]><span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'><span style='mso-element:field-begin'></span></span></span><span
style='mso-spacerun:yes'>&nbsp;</span>XE &quot;u\ monad&quot; <![endif]--><!--[if supportFields]><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'><span
style='mso-element:field-end'></span></span></span><![endif]--><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u\&nbsp;y</span></span>
has infinite rank and applies <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>u</span></span> to successive <span class=Definition>prefixes</span>
of <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y&nbsp;</span></span>.<span
style='mso-spacerun:yes'>&nbsp; </span>It applies <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>u</span></span> to the first
item of <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y</span></span>
(i.&nbsp;e. <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u&nbsp;1&nbsp;{.&nbsp;y</span></span>)
to produce the first item of the result; it then applies <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>u</span></span> to the first 2
items of <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y</span></span>
(i.&nbsp;e. <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u&nbsp;2&nbsp;{.&nbsp;y</span></span>)
to produce the second item of the result; and so on, with the last item of the
result being <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u&nbsp;(#y)&nbsp;{.&nbsp;y&nbsp;</span></span>.<span
style='mso-spacerun:yes'>&nbsp; </span>Example:</p>

<p class=Jcodemultiline>&nbsp;&nbsp; #\ 9 8 7 6</p>

<p class=Jcodemultiline>1 2 3 4</p>

<p class=BodyTextnoleader>This just gives the length of each prefix, not a
terribly edifying result.&nbsp; The details
can be seen using <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>fndisplay</span></span>:</p>

<p class=Jcodemultiline>&nbsp;&nbsp; defverbs 'tally'</p>

<p class=Jcodemultiline>&nbsp;&nbsp; tally\ 9 8 7 6</p>

<p class=Jcodemultiline>+-------+---------+-----------+-------------+</p>

<p class=Jcodemultiline>|tally 9|tally 9 8|tally 9 8 7|tally 9 8 7 6|</p>

<p class=Jcodemultiline>+-------+---------+-----------+-------------+</p>

<p class=MsoBodyText>Note that <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>u</span></span> is always applied to lists, because <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>{.</span></span>
always produces a list.&nbsp; In particular,
the first item of the result comes from applying <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>u</span></span> to a 1-item
list; conversely, even if <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>y</span></span> is a scalar, <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>(#y)&nbsp;{.&nbsp;y</span></span>
is a 1-item list.&nbsp; Note also that
if the applications of <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>u</span></span> produce results of different shapes, framing
fills are added to bring the results to a common shape, just as if they were
the results from applying a verb to different cells:</p>

<p class=Jcodemultiline>&nbsp;&nbsp; ]\ i. 3</p>

<p class=Jcodemultiline>0 0 0</p>

<p class=Jcodemultiline>0 1 0</p>

<p class=Jcodemultiline>0 1 2</p>

<p class=BodyTextnoleader>The result is the prefixes themselves, assembled as
items of a rank-2 array.</p>

<p class=MsoBodyText><!--[if supportFields]><span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'><span style='mso-element:field-begin'></span></span></span><span
style='mso-spacerun:yes'>&nbsp;</span>XE &quot;u\ monad&quot; <![endif]--><!--[if supportFields]><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'><span
style='mso-element:field-end'></span></span></span><![endif]--><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u\</span></span>
is most often used when <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>u</span></span> is of the form <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>u/</span></span>, i.&nbsp;e. as <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u/\&nbsp;</span></span>.<span
style='mso-spacerun:yes'>&nbsp; </span>Then the verb <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>u/</span></span> is applied to
the successive prefixes.&nbsp; Here are some
commonly-used forms:</p>

<p class=Jcodemultiline>&nbsp;&nbsp; +/\ i. 6</p>

<p class=Jcodemultiline>0 1 3 6 10 15</p>

<p class=BodyTextnoleader><span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>+/</span></span> means 'total the items', so <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>+/\&nbsp;i.&nbsp;6</span></span>
is <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>(0),(0+1),(0+1+2),(0+1+2+3)...</span></span>,
i.&nbsp;e. the running total of the items of <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>y&nbsp;</span></span>.</p>

<p class=Jcodemultiline>&nbsp;&nbsp; &gt;./\ 9 5 3
10 3 2 20</p>

<p class=Jcodemultiline>9 9 9 10 10 10 20</p>

<p class=BodyTextnoleader>For each item of <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>y</span></span>, the result is
the largest item occurring in the list up to that item of <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>y&nbsp;</span></span>.</p>

<p class=Jcodemultiline>&nbsp;&nbsp; &lt;/\ 0 0 0 0
1 1 0 0 1 0</p>

<p class=Jcodemultiline>0 0 0 0 1 0 0 0 0 0</p>

<p class=BodyTextnoleader><span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>&lt;/\&nbsp;y</span></span> on a Boolean list (i.&nbsp;e.
one containing only <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>0</span></span>
or <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>1</span></span>)
is a tricky way to turn off all <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>1</span></span>s following the first.<span
style='mso-spacerun:yes'>&nbsp; </span>See how it works: <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>&lt;/&nbsp;y</span></span> will
produce a result of <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>1</span></span>
only in the case where the last item of <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>y</span></span> is <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>1</span></span>
and the rest are <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>0</span></span>,
i. e. <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>0&nbsp;&lt;&nbsp;0...0&nbsp;&lt;&nbsp;1</span></span>,
so <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>&lt;/\&nbsp;y</span></span>
produces a <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>1</span></span>
for that prefix and <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>0</span></span>
for all the others.</p>

<p class=Jcodemultiline>&nbsp;&nbsp; *./\ 1 1 1 1 0
0 1 1 1</p>

<p class=Jcodemultiline>1 1 1 1 0 0 0 0 0</p>

<p class=BodyTextnoleader>Keep the leading <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>1</span></span>s of <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y</span></span>,
but set the rest to <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>0&nbsp;</span></span>.</p>

<p class=MsoBodyText><!--[if supportFields]><span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'><span style='mso-element:field-begin'></span></span></span><span
style='mso-spacerun:yes'>&nbsp;</span>XE &quot;u\. monad&quot; <![endif]--><!--[if supportFields]><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'><span
style='mso-element:field-end'></span></span></span><![endif]--><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u\.&nbsp;y</span></span>
is similar to <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u\&nbsp;y</span></span>,
except that it applies <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>u</span></span> to <span class=Definition>suffixes</span> of
<span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y&nbsp;</span></span>.<span
style='mso-spacerun:yes'>&nbsp; </span>It applies <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>u</span></span> to all of <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y</span></span>
(i.&nbsp;e. <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u&nbsp;0&nbsp;}.&nbsp;y</span></span>)
to produce the first item of the result; it then applies <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>u</span></span> to all but the
first item of <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y</span></span>
(i.&nbsp;e. <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u&nbsp;1&nbsp;}.&nbsp;y</span></span>)
to produce the second item of the result; and so on, with the last item of the
result being <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u&nbsp;((#y)-1)&nbsp;}.&nbsp;y&nbsp;</span></span>(that
is, <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u</span></span>
applied to the last item of <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>y</span></span>).&nbsp;
Example:</p>

<p class=Jcodemultiline>&nbsp;&nbsp; +/\. i. 6</p>

<p class=Jcodemultiline>15 15 14 12 9 5</p>

<p class=BodyTextnoleader>The running total now starts at the end and runs
backward.&nbsp; <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>fndisplay</span></span> shows
the details, and points out a subtlety of <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>u/\&nbsp;</span></span>:</p>

<p class=Jcodemultiline>&nbsp;&nbsp; defverbs 'plus&quot;0'</p>

<p class=Jcodemultiline>&nbsp;&nbsp; plus/\. &lt;&quot;0
i. 4</p>

<p class=Jcodemultiline>+----------------------+---------------+--------+-+</p>

<p class=Jcodemultiline>|0 plus 1 plus 2 plus 3|1 plus 2 plus 3|2 plus 3|3|</p>

<p class=Jcodemultiline>+----------------------+---------------+--------+-+</p>

<p class=BodyTextnoleader>Up till now we have applied unboxed inputs to verbs
defined by <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>defverbs</span></span>
and gotten useful results.&nbsp; Why then must
we box the atoms of <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>i.&nbsp;4</span></span>
before giving them to <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>plus/\.</span></span>?<span
style='mso-spacerun:yes'>&nbsp; </span>The reason is that the result of a verb
defined by <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>defverbs</span></span>
is boxed.&nbsp; Normally it is joined in an
array with other boxed outputs.&nbsp; Here,
the last result, the one containing just the cell <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>3</span></span>, is not produced
by <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>plus</span></span>;
rather, since <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>plus/</span></span>
is applied to a 1-element list, the cell is the <b>unmodified input cell</b>.<span
style='mso-spacerun:yes'>&nbsp; </span>If we had not boxed the atoms of <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>i.&nbsp;4</span></span>
(i.&nbsp;e. if we had executed <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>plus/\.&nbsp;i.&nbsp;4</span></span>), the unboxed <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>3</span></span>
would be joined to the other boxed results, and that would have given us a
domain error.&nbsp; Whenever you use <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u/\&nbsp;y</span></span>
or <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u/\.&nbsp;y</span></span>
you must make sure that the result of <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>u</span></span> has the same type (character, numeric, or
boxed) as <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y&nbsp;</span></span>.</p>

<p class=MsoBodyText><!--[if supportFields]><span style='mso-element:field-begin'></span><span
style='mso-spacerun:yes'>&nbsp;</span>XE &quot;Infix adverb&quot; <![endif]--><!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]--><!--[if supportFields]><span
style='mso-element:field-begin'></span><span
style='mso-spacerun:yes'>&nbsp;</span>XE &quot;u\ dyad&quot; <![endif]--><!--[if supportFields]><span
style='mso-element:field-end'></span><![endif]-->The dyadic form <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>x&nbsp;u\&nbsp;y</span></span>
has rank <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>0&nbsp;_</span></span>
and applies <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u</span></span>
to <span class=Definition>infixes</span> of <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>y&nbsp;</span></span>.<span
style='mso-spacerun:yes'>&nbsp; </span>An infix is a sequence of adjacent
items.&nbsp; <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>x</span></span> gives the length
of the infixes.&nbsp; The first item of the result
comes from the infix of length <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>|x</span></span> (that is, the absolute value of <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>x</span></span>)
starting with the first item of <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>y</span></span>, and subsequent items of the result come
from subsequent infixes.&nbsp; If <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>x</span></span>
is positive, successive infixes start at successive items of <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>y</span></span> (therefore, they
overlap), and the last infix is the one that ends with the last item of <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y</span></span>;
if <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>x</span></span>
is negative, infixes do not overlap: each one starts with the item following
the last item of the previous infix, and the last infix may be shorter than <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>|x&nbsp;</span></span>.<span
style='mso-spacerun:yes'>&nbsp; </span>Examples:</p>

<p class=Jcodemultiline>&nbsp;&nbsp; _2 ]\ 100 2
110 6 120 8 130 3</p>

<p class=Jcodemultiline>100 2</p>

<p class=Jcodemultiline>110 6</p>

<p class=Jcodemultiline>120 8</p>

<p class=Jcodemultiline>130 3</p>

<p class=BodyTextnoleader>This is a convenient way to reshape a list to have 2
items per row when you don't know how many rows there will be.</p>

<p class=Jcodemultiline>&nbsp;&nbsp; 2 -/\ 10
8 6 4 2</p>

<p class=Jcodemultiline>2 2 2 2</p>

<p class=Jcodemultiline>&nbsp;&nbsp; 2 -~/\
10 8 6 4 2</p>

<p class=Jcodemultiline>_2 _2 _2 _2</p>

<p class=BodyTextnoleader>Applying <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>-/</span></span> between each pair of items (with
adjacent pairs overlapping) takes the backward difference of each pair.<span
style='mso-spacerun:yes'>&nbsp; </span>To take the forward difference, subtract the
first from the second using <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>-~/&nbsp;</span></span>.</p>

<p class=Jcodemultilinefirst>&nbsp;&nbsp; 3 &gt;./\
1 2 3 8 2 3 1 5 4 3 12 3 2</p>

<p class=Jcodemultiline>3 8 8 8 3 5 5 5 12 12 12</p>

<p class=BodyTextnoleader>This takes the maximum over a rolling window 3 items
wide.</p>

<p class=MsoBodyText><!--[if supportFields]><span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'><span style='mso-element:field-begin'></span></span></span><span
style='mso-spacerun:yes'>&nbsp;</span>XE &quot;u\. dyad&quot; <![endif]--><!--[if supportFields]><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'><span
style='mso-element:field-end'></span></span></span><![endif]--><span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>x&nbsp;u\.&nbsp;y</span></span>
is similar to<span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>
x&nbsp;u\&nbsp;y</span></span> , but it operates on <span class=Definition>outfixes</span>
which contain all of <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y</span></span>
<b style='mso-bidi-font-weight:normal'>except for</b> the corresponding
infix.&nbsp; Its uses are few.<span
style='mso-spacerun:yes'>&nbsp; </span>One is to enumerate the faces of a simplex,
each of which consists of all the vertices of the simplex with one vertex
omitted.&nbsp; To list the 4 faces of a
simplex with 4 vertices, we could use</p>

<p class=Jcodemultiline>&nbsp;&nbsp; 1 ]\. 0 1 2 3</p>

<p class=Jcodemultiline>1 2 3</p>

<p class=Jcodemultiline>0 2 3</p>

<p class=Jcodemultiline>0 1 3</p>

<p class=Jcodemultiline>0 1 2</p>

<p class=Section><a name="_Toc191734380">When There Are No Subsets</a></p>

<p class=MsoBodyText>The interpreter treats empty operands with care, so that
you don't have to worry about them as special cases.<span
style='mso-spacerun:yes'>&nbsp; </span>If you simply must know the details, here
they are:&nbsp; If <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>u\</span></span> or <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u\.</span></span>
is applied where there are no applicable subsets of <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>y</span></span> (either because <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y</span></span>
is empty or because it is too short to muster even a single infix), <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u</span></span>
is applied to a list of fills <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>f</span></span> and the result has 0 items, each with the
shape and type of the result of <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>u</span></span>&nbsp;<span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>f&nbsp;</span></span>.<span
style='mso-spacerun:yes'>&nbsp; </span>The items of <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>f</span></span> have the shape
of items of <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>y</span></span>,
and the length of <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>f</span></span>
is <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>0</span></span>
for monad <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u\</span></span>
or <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u\.</span></span>,
or the length of an infix or outfix for dyad <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>u\</span></span> or <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>u\.</span></span>&nbsp;.<span
style='mso-spacerun:yes'>&nbsp; </span>For example:</p>

<p class=Jcodemultiline>&nbsp;&nbsp; $ 2 ]\ i. 1 3</p>

<p class=Jcodemultiline>0 2 3</p>

<p class=BodyTextnoleader>We were looking for infixes of length 2; each one
would have had shape <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>2&nbsp;3</span></span>,
but with only one item in <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>y</span></span> we have insufficient data for an infix.<span
style='mso-spacerun:yes'>&nbsp; </span>So, the interpreter creates a 2x3 array of
fills and applies the verb <span class=Jcode><span style='mso-bidi-font-family:
"Times New Roman"'>]</span></span> to it; the verb returns shape <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>2&nbsp;3</span></span>
and the overall result is a list of 0 items with that shape.</p>

<p class=Jcodemultiline>&nbsp;&nbsp; $ ]\ i. 0 2 3</p>

<p class=Jcodemultiline>0 0 2 3</p>

<p class=BodyTextnoleader>The cells of <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>y</span></span> have shape <span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>2&nbsp;3</span></span>
so we apply the verb <span class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>]</span></span>
to a list of 0 of them (i.&nbsp;e. with shape <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>0&nbsp;2&nbsp;3</span></span>).<span
style='mso-spacerun:yes'>&nbsp; </span>The result of <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>]</span></span> has the same shape
as the input, and the final result is a list of 0 items each with shape<span
class=Jcode><span style='mso-bidi-font-family:"Times New Roman"'>
0&nbsp;2&nbsp;3</span></span>, i.&nbsp;e. with overall shape <span class=Jcode><span
style='mso-bidi-font-family:"Times New Roman"'>0&nbsp;0&nbsp;2&nbsp;3&nbsp;</span></span>.</p>

</div><!--bottom jump start--><hr><a href="verbs_for_arithmetic.htm">&gt;&gt;</a>&nbsp;
<a href="empty_operands.htm">&lt;&lt;</a>&nbsp;
<a href="../user/contents.htm">Usr</a>&nbsp;
<a href="../primer/contents.htm">Pri</a>&nbsp;
<a href="../jforc/contents.htm">JfC</a>&nbsp;
<a href="../learning/contents.htm">LJ</a>&nbsp;
<a href="../phrases/contents.htm">Phr</a>&nbsp;
<a href="../dictionary/contents.htm">Dic</a>&nbsp;
<a href="../dictionary/vocabul.htm">Voc</a>&nbsp;
<a href="../dictionary/xmain.htm">!:</a>&nbsp;
<a href="../index.htm">Help</a>&nbsp;
J for C Programmers<!--bottom jump end--></BODY></HTML>
