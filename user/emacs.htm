<html>
<head><link rel=stylesheet href="../jdoc.css" type="text/css">
<title>Emacs</title>

</head><body><!--top jump start--><a href="files.htm">&gt;&gt;</a>&nbsp;
<a href="regex_utilities.htm">&lt;&lt;</a>&nbsp;
<a href="../user/contents.htm">Usr</a>&nbsp;
<a href="../primer/contents.htm">Pri</a>&nbsp;
<a href="../jforc/contents.htm">JfC</a>&nbsp;
<a href="../learning/contents.htm">LJ</a>&nbsp;
<a href="../phrases/contents.htm">Phr</a>&nbsp;
<a href="../dictionary/contents.htm">Dic</a>&nbsp;
<a href="../release/contents.htm">Rel</a>&nbsp;
<a href="../dictionary/vocabul.htm">Voc</a>&nbsp;
<a href="../dictionary/xmain.htm">!:</a>&nbsp;
<a href="../index.htm">Help</a>&nbsp;
User<hr><!--top jump end--> 
<h1>Emacs</h1>
J definitions are in text files and can be edited with any editor. Jconsole has no native editor and you use the editor of your choice: a simple editor such as Windows notepad (or Unix equivalent), or a more powerful editor such as emacs. <br><br>

A J project typically consists of a small number of small files and a simple editor is quite adequate and emacs is overkill. However, if you already know and love emacs, you may sorely miss it when in J.<br>
<br>
Alexander Schmolck's emacs j-mode.el allows you to integrate emacs with Jconsole.<br>

<h1>j-mode.el</h1>
Emacs j-mode.el gives an emacs window to J. All J session input and output is through the emacs window with all the features that are programmed in the open source j-mode.el. Alexander's j-mode.el provides editing and interactive evaluation support and has features such as syntax-highlighting, syntax-aware code indentation, execution of code regions (current function, line etc.), help browsing, and vocabulary look up of the word at the caret.<br>
<br>
Learn more about j-mode.el and get the latest version from <a href="http://j-mode.sourceforge.net/">http://j-mode.sourceforge.net/</a>. <br>

<h1>j-mode.el installation</h1>
The j-mode.el installation instructions say:<br>
&nbsp;&nbsp;1. Copy j-mode.el to a directory in your emacs load-path.<br>
<br>
&nbsp;&nbsp;2. Add the following to your .emacs file or site-init.el:<br>
&nbsp;&nbsp;&nbsp;&nbsp;(autoload 'j-mode "j-mode.el"&nbsp;&nbsp;"Major mode for J." t)<br>
&nbsp;&nbsp;&nbsp;&nbsp;(autoload 'j-shell "j-mode.el" "Run J from emacs." t)<br>
<br>
One possible problem is that you don't have a .emacs file. Run<br>
....&gt; emacs ~/.emacs<br>
to automatically create a new .emacs with lots of default stuff.<br>
<br>
Another problem is knowing where to put j-mode.el (emacs load-path?). A brute force approach is to put j-mode.el in your home directory and then edit the .emacs file to give a full path. That is:<br>
&nbsp;&nbsp;&nbsp;&nbsp;(autoload 'j-mode "~/j-mode.el"&nbsp;&nbsp;"Major mode for J." t)<br>
&nbsp;&nbsp;&nbsp;&nbsp;(autoload 'j-shell "~/j-mode.el" "Run J from emacs." t)

<h1> other editors</h1>
It is possible that other editors with a shell command facility similar to emacs that allows connecting an editor window to the stdin/stdout of another program could provide a similar level of integration with J.<br>
<!--bottom jump start--><hr><a href="files.htm">&gt;&gt;</a>&nbsp;
<a href="regex_utilities.htm">&lt;&lt;</a>&nbsp;
<a href="../user/contents.htm">Usr</a>&nbsp;
<a href="../primer/contents.htm">Pri</a>&nbsp;
<a href="../jforc/contents.htm">JfC</a>&nbsp;
<a href="../learning/contents.htm">LJ</a>&nbsp;
<a href="../phrases/contents.htm">Phr</a>&nbsp;
<a href="../dictionary/contents.htm">Dic</a>&nbsp;
<a href="../release/contents.htm">Rel</a>&nbsp;
<a href="../dictionary/vocabul.htm">Voc</a>&nbsp;
<a href="../dictionary/xmain.htm">!:</a>&nbsp;
<a href="../index.htm">Help</a>&nbsp;
User<!--bottom jump end--><br>
</body>
</html>