<html>
<head><link rel=stylesheet href="../jdoc.css" type="text/css">
<title>J Server and Telnet (jserver and jtelnet) classes</title>

</head><body><!--top jump start--><a href="oleocx.htm">&gt;&gt;</a>&nbsp;
<a href="socket_utilities.htm">&lt;&lt;</a>&nbsp;
<a href="../user/contents.htm">Usr</a>&nbsp;
<a href="../primer/contents.htm">Pri</a>&nbsp;
<a href="../jforc/contents.htm">JfC</a>&nbsp;
<a href="../learning/contents.htm">LJ</a>&nbsp;
<a href="../phrases/contents.htm">Phr</a>&nbsp;
<a href="../dictionary/contents.htm">Dic</a>&nbsp;
<a href="../release/contents.htm">Rel</a>&nbsp;
<a href="../dictionary/vocabul.htm">Voc</a>&nbsp;
<a href="../dictionary/xmain.htm">!:</a>&nbsp;
<a href="../index.htm">Help</a>&nbsp;
User<hr><!--top jump end-->
<h1>J Server and Telnet (jserver and jtelnet) classes</h1>
The jserver class allows you to create and manage a separate J task as a server. jserver.ijs (open 'jserver') defines a jserver class that uses the J Engine Protocol to create and manage a J Engine server. It starts a new J task, either on the local machine or a remote machine, and controls that task with the J Engine Protocol.You can take advantage of multiple processors on the same host, remote hosts, and build applications where the interactive GUI runs in one JE and the data processing is done in others as appropriate. For example:<br>
&nbsp;&nbsp; require'jserver'<br>
&nbsp;&nbsp; js=: conew'jserver'&nbsp;&nbsp;&nbsp;&nbsp; NB. create new jserver object<br>
&nbsp;&nbsp; local__js''&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NB. create J server task<br>
&nbsp;&nbsp; run__js'abc=: i.2 3 4' NB. run sentence in server task<br>
&nbsp;&nbsp; d=: get__js'abc'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NB. get value from J server task<br>
&nbsp;&nbsp; destroy__js''&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NB. destroy object and free resources<br>
<br>
The jserver class also supports J server tasks running on on other machines. It uses jtelent to start the J server on the remote machine. If you had J installed on another machine that was accessible to you from telnet you could start and use a J server on that remote machine. For example, if your other machine is called Frodo and you have a user id of Bilbo and a password of Baggins, you could try the following:<br>
<font face=courier><br>
&nbsp;&nbsp; require'jserver'<br>
&nbsp;&nbsp; js=.conew'jserver'<br>
&nbsp;&nbsp; NB. start J server on remote machine<br>
&nbsp;&nbsp; remote__js'Frodo Bilbo Baggins 0'<br>
&nbsp;&nbsp; NB. run sentence on remote server<br>
&nbsp;&nbsp; run__js'abc=:i.2 3 4'<br>
&nbsp;&nbsp; destroy__js''</font><br>
<br>
<font face=courier>remote__js</font> connects with jtelnet to the remote system and runs jepstart with the required parameters. The remote machine must have a jepstart that starts jep with the parameters. For example, on the remote system in a bin directory define a shell script called jepstart:<br>
<font face=courier><br>
#!/bin/sh<br>
cd ~/j601<br>
./jep $*<br>
</font><br>
You could use Frodo's IP address (e.g. 192.168.1.5) instead of the name.<br>
<br>
The remote jserver uses jtelnet, a simple and naive implementation of the telnet protocol. For example:<br>
<font face=courier><br>
&nbsp;&nbsp; require'jtelnet'<br>
&nbsp;&nbsp; tn=: conew'jtelnet'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NB. create jtelnet object<br>
&nbsp;&nbsp; logon__tn'Frodo Bilbo Baggins 0'<br>
&nbsp;&nbsp; run__tn'ls'<br>
&nbsp;&nbsp; destroy__tn''</font><br>
<br>
Open and study the scripts for more information and ideas on their use.<br>
<br>
<!--bottom jump start--><hr><a href="oleocx.htm">&gt;&gt;</a>&nbsp;
<a href="socket_utilities.htm">&lt;&lt;</a>&nbsp;
<a href="../user/contents.htm">Usr</a>&nbsp;
<a href="../primer/contents.htm">Pri</a>&nbsp;
<a href="../jforc/contents.htm">JfC</a>&nbsp;
<a href="../learning/contents.htm">LJ</a>&nbsp;
<a href="../phrases/contents.htm">Phr</a>&nbsp;
<a href="../dictionary/contents.htm">Dic</a>&nbsp;
<a href="../release/contents.htm">Rel</a>&nbsp;
<a href="../dictionary/vocabul.htm">Voc</a>&nbsp;
<a href="../dictionary/xmain.htm">!:</a>&nbsp;
<a href="../index.htm">Help</a>&nbsp;
User<!--bottom jump end--></body>
</html>